version: '3.8'
services:
  foodloop-postgres:
    image: "postgres:16.1-alpine"
    container_name: foodloop-postgres
    volumes:
      - ./foodloop-data:/lib/postgresql/data
      - ./foodloop-db-files/01_schema.sql:/docker-entrypoint-initdb.d/01_schema.sql
      - ./foodloop-db-files/seeders/02_insertPeople.sql:/docker-entrypoint-initdb.d/02_insertPeople.sql
      - ./foodloop-db-files/seeders/03_insertFoodlist.sql:/docker-entrypoint-initdb.d/03_insertFoodlist.sql
      - ./foodloop-db-files/seeders/04_insertPeopleToFoodlist.sql:/docker-entrypoint-initdb.d/04_insertPeopleToFoodlist.sql
      - ./foodloop-db-files/seeders/05_insertFood.sql:/docker-entrypoint-initdb.d/05_insertFood.sql
      - ./foodloop-db-files/seeders/06_insertTag.sql:/docker-entrypoint-initdb.d/06_insertTag.sql
      - ./foodloop-db-files/seeders/07_insertFoodToTag.sql:/docker-entrypoint-initdb.d/07_insertFoodToTag.sql
      - ./foodloop-db-files/seeders/08_insertRestaurant.sql:/docker-entrypoint-initdb.d/08_insertRestaurant.sql
      - ./foodloop-db-files/seeders/09_insertRestaurantToFood.sql:/docker-entrypoint-initdb.d/09_insertRestaurantToFood.sql
      - ./foodloop-db-files/seeders/10_insertFoodlistToFood.sql:/docker-entrypoint-initdb.d/10_insertFoodlistToFood.sql

    ports:
      - 5432:5432
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_HOST: ${POSTGRES_HOST}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
      PGUSER: ${POSTGRES_USER}
      PGDATABASE: ${POSTGRES_DB}
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready" ]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: unless-stopped
