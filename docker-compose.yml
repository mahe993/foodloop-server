version: '3.8'
services:
  foodloop-postgres:
    image: "postgres:16.1-alpine"
    container_name: foodloop-postgres
    volumes:
      - ./foodloop-data:/var/lib/postgresql/data
      - ./foodloop-db-files/schema.sql:/docker-entrypoint-initdb.d/schema.sql
      - ./foodloop-db-files/insertFood.sql:/docker-entrypoint-initdb.d/insertFood.sql
      - ./foodloop-db-files/insertFoodToTag.sql:/docker-entrypoint-initdb.d/insertFoodToTag.sql
      - ./foodloop-db-files/insertRestaurant.sql:/docker-entrypoint-initdb.d/insertRestaurant.sql
      - ./foodloop-db-files/insertRestaurantToFood.sql:/docker-entrypoint-initdb.d/insertRestaurantToFood.sql
      - ./foodloop-db-files/insertRestaurantToTag.sql:/docker-entrypoint-initdb.d/insertRestaurantToTag.sql
      - ./foodloop-db-files/insertTag.sql:/docker-entrypoint-initdb.d/insertTag.sql
    # user: "965685620:396131994"
    ports:
      - 5432:5432
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_HOST: ${POSTGRES_HOST}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
      PGUSER: ${POSTGRES_USER}
      PGDATABASE: ${POSTGRES_DB}
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready" ]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: unless-stopped